@page "/login"

@using Microsoft.AspNetCore.Identity
@using System.ComponentModel.DataAnnotations
@using Frontend.Models

@inject SignInManager<IdentityUser> SignInManager
@inject NavigationManager Navigation

@inject ILogger<LoginPage> Logger

<h3>LoginPage</h3>

<EditForm Model="loginModel" OnValidSubmit="HandleLogin" FormName="UserLogin">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label for="email">Email</label>
        <InputText id="email" class="form-control" @bind-Value="loginModel.Email" />
        <ValidationMessage For="() => loginModel.Email" />
    </div>

    <div class="mb-3">
        <label for="password">Password</label>
        <InputText id="password" type="password" class="form-control" @bind-Value="loginModel.Password" />
        <ValidationMessage For="() => loginModel.Password" />
    </div>

    <button type="submit" class="btn btn-primary">Login</button>
</EditForm>

@code {
    [SupplyParameterFromForm]
    public LoginModel? loginModel { get; set; }

    protected override void OnInitialized() { loginModel ??= new(); }

    private async Task HandleLogin()
    {
        try
        {
            Logger.LogInformation("Login attempt");
            var result = await SignInManager.PasswordSignInAsync(loginModel.Email, loginModel.Password, isPersistent: false, lockoutOnFailure: false);
            if (result.Succeeded)
            {
                Logger.LogInformation("Login successful");
                Navigation.NavigateTo("/");
            }
            else
            {
                Logger.LogInformation("Login failed");
            }
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, "exception occured");
        }

    }
}
