@using Frontend.Components.Shared

@page "/licitation-screen"

@rendermode InteractiveServer

<div class="licitation">
	<div class="licitation-container">
		<div class="licitation-screen">
			<div class="players">
				<div class="player">
					<p>Player 1</p>
				</div>
				<div class="player">
					<p>Player 2</p>
				</div>
				<div class="player">
					<p>Player 3</p>
				</div>
				<div class="player player4">
					<p>Player 4</p>
				</div>
			</div>
		</div>
		<div class="bidding-panel">
			<div class="panel-box-1">
				<button>Pass</button>
				<button>X</button>
				<button>XX</button>
			</div>
			<div class="panel-box-2">
				<div class="clubs">
					@for (int i = @lowestClub; i <= 7; i++)
					{
						int currentNumber = i;
						string suit = "club";
						<BiddingButton OnClick="() => HandleClubButtonClick(currentNumber, suit)" Number=currentNumber Icon="♣" />
					}
				</div>
				<div class="diamonds">
					@for (int i = @lowestDiamond; i <= 7; i++)
					{
						int currentNumber = i;
						string suit = "diamond";
						<BiddingButton OnClick="() => HandleClubButtonClick(currentNumber, suit)" Number=currentNumber Icon="♦" />
					}
				</div>
				<div class="hearts">
					@for (int i = @lowestHeart; i <= 7; i++)
					{
						int currentNumber = i;
						string suit = "heart";
						<BiddingButton OnClick="() => HandleClubButtonClick(currentNumber, suit)" Number=currentNumber Icon="♥" />
					}
				</div>
				<div class="spades">
					@for (int i = @lowestSpade; i <= 7; i++)
					{
						int currentNumber = i;
						string suit = "spade";
						<BiddingButton OnClick="() => HandleClubButtonClick(currentNumber, suit)" Number=currentNumber Icon="♠" />
					}
				</div>
			</div>
		</div>
	</div>
</div>


@code {
	private int lowestClub = 1;
	private int lowestDiamond = 1;
	private int lowestHeart = 1;
	private int lowestSpade = 1;

	private void HandleClubButtonClick(int i, string suit)
	{
		lowestClub = i;
		lowestDiamond = i;
		lowestHeart = i;
		lowestSpade = i;

		switch (suit) 
		{
			case "spade":
				lowestSpade = i + 1;
				lowestHeart = i + 1;
				lowestDiamond = i + 1;
				lowestClub = i + 1;
				break;
			case "heart":
				lowestHeart = i + 1;
				lowestDiamond = i + 1;
				lowestClub = i + 1;
				break;
			case "diamond":
				lowestDiamond = i + 1;
				lowestClub = i + 1;
				break;
			case "club":
				lowestClub = i + 1;
				break;
		}
		
	}
}
