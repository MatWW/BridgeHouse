@page "/register"

@using System.ComponentModel.DataAnnotations
@using Shared;
@using Shared.Models;

@inject NavigationManager Navigation
@inject HttpClient Http

<h3>Registration</h3>

<EditForm Model="@registrationModel" FormName="RegistrationForm" OnValidSubmit="HandleRegistration">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label for="email">Email</label>
        <InputText id="email" class="form-control" @bind-Value="registrationModel.Email" />
        <ValidationMessage For="() => registrationModel.Email" />
    </div>

    <div class="mb-3">
        <label for="username">UserName</label>
        <InputText id="username" class="form-control" @bind-Value="registrationModel.Nickname" />
        <ValidationMessage For="() => registrationModel.Nickname" />
    </div>

    <div class="mb-3">
        <label for="password">Password</label>
        <InputText id="password" type="password" class="form-control" @bind-Value="registrationModel.Password" />
        <ValidationMessage For="() => registrationModel.Password" />
    </div>

    <div class="mb-3">
        <label for="confirmPassword">Confirm Password</label>
        <InputText id="confirmPassword" type="password" class="form-control" @bind-Value="registrationModel.ConfirmPassword" />
        <ValidationMessage For="() => registrationModel.ConfirmPassword" />
    </div>

    <button type="submit" class="btn btn-primary">Register</button>

</EditForm>

@code {
    [SupplyParameterFromForm]
    public RegistrationModel? registrationModel { get; set; }

    protected override void OnInitialized()
    {
        registrationModel ??= new();
    }

    private async Task HandleRegistration()
    {
        await Http.PostAsJsonAsync("api/authentication/register", registrationModel);
    }
}
